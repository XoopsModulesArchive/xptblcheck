// $Id: xoops_version.php,v 2.02f 2003/10/14 15:30:00 toshimitsu Exp $
Xoopsモジュール：テーブルロジカルチェック　：Xoops2用
-----------------------------------------------------------------------

まずソフトの目的：

　　　　Xoops がシステムテーブルのデータについて、
　　　　Xoopsが必要とシステムとしているはずの、
　　　　「このテーブル項目の値は、こちらのテーブルとリンクするので
　　　　元のテーブルに同じ値がないのはおかしい」　とか
　　　　　「この値が無いと、xoopsがデータを使えないよ」　などの場合に
　　　　警告のメッセージを表示するのが目的です｡

　　　　何も異常がないときは、「エラー無し　ＯＫ」と表示されるだけです｡

　　　　データの更新（削除・追加・訂正）はしません｡
　　　　データ更新が必要な場合はphpMyAdminとかで別途してください｡

　　　（チェック用のＳＱＬ集をつかって、リンクの外れチェックしてるだけです
　　　　xoops初心者の方のために、ＳＱＬ集と表示結果のルーチンだけという
　　　　シンプルなものです）

-----------------------------------------------------------------------
役に立つのか？：

　　　モジュール化したので、Xoopsが動いてないと、使えません｡
　　　だから、xoopsは動くが、
　　　「管理アイコンが出ない」
　　　「ブロック管理画面にブロックが表示されない」
　　　などの異常動作時(軽症)の、
　　　システムテーブルのデータの確認などにつかえます｡

＜主な機能＞

１．アンイスートル済みモジュールのゴミデータの検出 
２．無いと困りそうな必要なデータ紛失検出｡ 
３．テーブルのキーにNULL値不正なデータの検出 
４．管理者専用にして、管理メニューから動かしてください｡ 
５．何も異常がないと、ＯＫとしか表示されないません｡ 
６．おまけですが、対象にしている下記にテーブルのデータ一覧表示
　　　　
-----------------------------------------------------------------------

Xoops2 専用な理由：
　　　（xoops１~２　の全般のモジュールとして動くはずですが、
　　　　　　バージョンによりチェックするテーブルが違うので専用と書いてます｡
　　　　　　万が一、違うバージョンで動かしても、select文してるだけなので、
　　　　　　Xoopsに悪い影響はないと思いますが？
　　　　　　エラー、警告の意味が不明になるので？
　　　　　　Xoops2以外は、ともかく　わたくしは、未確認です）

-----------------------------------------------------------------------
出力メッセージの意味について：

　出力するメッセージが、非常に言葉足りないので、ＳＱＬ文が読めないと
　　エラーや警告が出ても、どうしてそう出るのかわからないはずです｡

　　それに、たとえ、出力するメッセージが無効なデータと判断しても、
　　そのSQL文の局部的な見方だけなので、
　　別のファイルのデータが足りないためにメッセージが出ているかも？
　　別テーブルにレーコード追加が必要なのかもしれません｡
　　また、
　　　そのバージョンには、そのテーブルがないか、
　　　その必要がないかもしれません｡（関連性が肝心）
　
　　ただ言えるのは、モジュールなどのマスタなテーブルにない、
　　　モジュールＩＤ番号は、そのテーブル関連のリンクする、
	　他のテーブルに残っていても使われません｡

　　　また、同じモジュールを、再度インスートルしても
　　モジュールＩＤ番号は前とは別のものになりますので、
　　前のモジュールＩＤ番号のデータは、やはり使えません｡

　　そのため、現存する　モジュールＩＤ番号に訂正するか、ですが
　　訂正するといっても、
　　テーブルによっては、関連性が複雑で間違うと、逆に問題が出ます｡
　　または、本当に不必要なら削除するしかありません｡

　　　同様のことが、
　　ユーザー、グループ、ブロックなどの主要のテーブルについて言えます｡
　　この辺を理解してメッセージとデータを見てください｡

--------------
　どうしてデータがそうなったのか？、
　元の発生原因は、わからないけれど？、
　データとして、何がおかしいのか、みたいなことが検出が出来れば、
　元の発生原因は、わからなくても正常状態にデータを直す手がかりになりなります。
　だしければ、xoopsの動作は健康になるはずです｡

　システムデータを正常にするのがXoopsの健康動作への近道ですが、
　自己解決で、データを直したとしても
　元の発生原因を無くさないと、何度でも再発します｡
　だから、
　発生した状況をデータ情報ともにXoopsの掲示板サイトに報告して
　xoopsのサイトの達人たちに、「元の発生原因」の根絶を託しましょう｡

＜お願い：あなただけの問題で、終わらせないでください＞

　データが、おかしいと検出されても、
　何をどう直せばいいのか、直し方がわからない方は、
　xoopsのサイトの掲示板の達人の方たちに聞いてみたら良いと思います｡

注意：Xoopsのサイトの掲示板に聞くときには
　　　単に、「画面に出ないどうしてでしょう？」とかでは、
　　　Xoopsサイトの掲示板の達人の方たちも答えようがないはずです｡
　　　その前に、XoopsのＦＡＱや技術情報に前例がないか調べましょう｡

一般的に、５Ｗ１H　( Who When Where What Why How)
に心がけて、書き入れれば、誰かレスしてくれると思います｡

（５Ｗ１H　の一般的な、順番は忘れたけど）

　who　誰が、管理者、ユーザー
　when　いつ、いつから、どうしたときから
　where　どこで、どういう装置で、どういうサイトで
　what　何が、症状、どういう状態

　　　いかにして解ってもらえるようにするかが、ポイントです｡
　
　　　（「phpデバグ」メッセージなど
　　　　できるだけ詳しく表示データを添えて簡潔に）

　why　なにがわからないか、何が困っているのか
　how　どうすればいいのか、どういうことを聞きたいか

ということです｡

	phpデバグ、
	MySQL/Blockデバグ、
	smarty構文デバグなどの表示データ
	だけでなく、
	テーブルロジカルチェックの表示メッセージも
	表示データを添えていると、
	サイトの達人の方も、どういう状態なのか
	正しく答えられるのではと期待してます｡

-----------------------
テーブルチェックが何故必要なのか：

　　　Xoopsは、かなり良く出来たシステムです｡
　　　phpデバグ、SQＬの構文デバグ、smarty構文デバグと、
　　　便利なデバグ３点セットみたいな、機能がついてます｡

　この、デバグで問題ないモジュールばかりなら、正常な（健康な）Xoopsなはずです｡

それなのに、なぜ　「管理アイコンが出ない」　「ブロックが表示されない」など
症状がでるのでしょうか？

　Xoopsはphpデバグ、SQＬの構文デバグ、smarty構文デバグでＯＫで

　そして、さらに、Xoopsが必要としている、システムデータであれば、

　上記の症状が出ないはずだと思っています｡

　このサイト管理関係の表示上の症状は、
発生元原因はわからなくても、ともかく、直接の原因は
システムテーブルの
　　データの値が無い
　　間違っている
などに起因してるのがほとんどだと、思います｡

　システムデータをチェックするものを、Xoopsは標準では用意されてません｡
　正常なデータあることを前提にして、プログラムは動作します｡

　しかし、いつもサイトやブラウザーが安定して動作しているとは限りません｡
　また、Xoopsもプログラムですから、どこかにバグがあるかもしれません｡

正常でないデータといっても、症状、原因は多岐にわたるので一概にはいえませんが
このへんのテーブルデータのチェックを、
　達人の方ならphpMyAdminとか使って、ＳＱＬとかスクリプトを組めば確実にわかるわけです｡
　でも、手間もかかるし
　xoops初心者には、xoopsのどのテーブルがどう関係している探すだけでも大変です｡
　データベース初心者ならなおさらです｡

　しかたがないので、最初は自分用のために作りました｡
　ついでに、せっかくなので、モジュール化して公開しました｡

--------------------------------
phpのソースの読める方へ
自分用に直してください。間違っていたらごめんなさいです｡

　独創性のない　結構・陳腐なソフトですが
　どこにも利用できるものが見当たらなかったので
　ソース自体は、ほぼ全面わたくしが新規に書いてます｡
　好きにつかって改造してやってください｡

あなた用の、独自のＳＱＬ文を登録するファイル（場所）を作りました｡
/sptblcheck/admin/sample/の中に入れています。
/sptblcheck/admin/の中にコピーして入れてつかってください。

　　　 2: xptblparam2.php (カスタム用：ご自由に追加・変更してください)
　　　 3: xptblparam3.php (カスタム用：ご自由に追加・変更してください)

下記の「パラメータファイルの仕様」を参照願います

やっている内容はシンプルだと思います｡
使い方は自由です
　フォーラムなり、お使いのテーブルの日常チェック用のＳＱＬ文
　いつも調べる特定のテーブルデータサーチ用ＳＱＬ文とか
　固定の特定条件のデータを表示するスクリプトの代わりになるかな｡
　
 パラメータファイルを書き換えるだけ、
 どのxoopsバージョンでもいいはずです(未確認)｡
 また、Xoopsのシステムテーブルなくても、
 フォーラムモジュールのテーブルとかでもいいです｡
　
（ただし、表示するデータの件数が多いと、
　ブラウザーが表示しきれなくなると思います｡）

---------------------------------------------------------------------
パラメータファイルの仕様　2003-7-29 ver1.41　以降

　　　　default=xptblparam.php (テーブルリンクチェック中心)
　　　 1: xptblparam1.php(NULL KEYの存在チェック)
　　　 2: xptblparam2.php (カスタム用：ご自由に追加・変更してください)
　　　 3: xptblparam3.php (カスタム用：ご自由に追加・変更してください)

　配列の添え字番号は、処理の識別と判定ループカウントに使うので
　ファイルごとに　1~100 までの間数字で指定可
　重複しなければ、間が飛んでも可｡
   (ver2.02から100件　制限はずしました　900から初めてもｏｋ
   　でも、一度にチェックするのは、少ないほうが良いですよ)

　各パラメータは、
　省略可の変数は、使用しないときは、変数自体を記述としてパラメータに書かないこと
　条件文用の　"　WHERE　"の文字は自動で付け足すので指定しないでください｡

---------ジャッジ判定用のパラメータ項目　仕様

　[番号]の判定処理をするかどうか、事前の判定用値の検出のため
　これは、特別なときにしか使いません。

$pre_judgquery_arr[番号] =SQL文字列　　［任意　　WHERE より前の位置のSELECT記述　］
$pre_judgcriteria_arr[番号] = SQL条件文字列　　［任意　　WHERE より後の位置の条件記述　］
$pre_judgquerycount_arr[番号] =数字　　［$pre_judgquery_arrを指定している場合は、必須］

　　　$pre_judgquerycount_arr[番号] =数字は件数との比較です｡

　　0 を指定したときは、データ件数　= 0 件のときだけ　： 判定処理をする
　　1 以上の数字を指定したときは、データ件数　>= 指定数 件なら： 判定処理をする

　　この値の判定の応用としては、何件以上になったら警告を出すとに使えるかも｡

---------
　前処理クエリーにより　条件用キー値の配列取得用、
　判定ルーチンをこの件数分、繰り返し行うため、一致するキーが必要です｡
　ただし、１項目しか配列にしてません｡
　全クループＩＤに対してとか、全モジュールＩＤに対して、調べるとかのときに使います｡
　（必要なときだけ書きます）
  
  変数$pre_query_arr[番号],$pre_keyname_arr[番号]
  が指定されていることで、
  前処理あり、判定ループと判断してます｡　
 

$pre_query_arr[番号] =SQL文字列　　［任意　　WHERE より前の位置のSELECT記述　］
$pre_criteria_arr[番号] = SQL条件文字列　　［任意　　WHERE より後の位置の条件記述　］
$pre_keyname_arr[番号] =項目名文字列　　［$pre_query_arrを指定している場合は、必須］

----------------------------------------------------
　判定クエリー用　ここのが、最低限必要なメインの判定用です｡

$checkname_arr[番号] = 文字列　　［必須　"trash"　| "missing" | "123group"　］

これは、チェックするモード
　"trash" = データがあったときにメッセージ表示　主にゴミデータの検出用
　"missing" = データが無かったときにメッセージ表示　主に必要データの検出用
　"123group" = グループ1,2,3のデータが無かったとき限定の　ちょっと変則の検出用
　"overlaps" = データが２件以上（複数）の検出用 (xptblcheck ver2.02からこのモード追加。)

$query_arr[番号] = SQL文字列　　［必須　WHERE より前の位置のSELECT記述　］
$criteria_arr[番号] = SQL条件文字列　　［任意　　WHERE より後の位置の条件記述　］

　　条件記述が無いときは、$criteria_arr[番号] そのものを書かないこと｡
　
　　　"123group"のときだけは、ちょっと変則で
　　　　$criteria_arr[21] = "groupid = " ;
　　　　のように、
　　　　条件式の最後を、グループIDのコードを = 
　　　　で尻切れトンボな記述をしてください｡
　　　　３回ＳＱＬすればすむことなので、
　　　　"123group"のモードは、そのうち、使うのやめようと思います｡

　前処理クエリーにより　条件用キー値の配列値を条件式で使う項目名

$keyname_arr[番号] =項目名文字列　　［$pre_query_arrを指定している場合は、必須］

$strhanteimsg_arr[番号] = 文字列 　　［必須　メッセージのタイプがわかるように　］

　_AM_XPTC_ERRORMSG= 'ERROR'
　_AM_XPTC_KEIKOKUMSG= '警告'
　　直接指定するなら"ＯＫ"とか、"テスト"とか、文字指定をする
    (例：  $strhanteimsg_arr[99] = "テスト")

$strcomment_arr[番号] = 文字列 　　［必須　メッセージ用　］

検出したときの、表示用コメントを書きます｡

----------------------------------------------------------------
----------------------------------------------------------------
シンプルな例１：
　groupsのグループＩＤ = 0は、テーブルデータとしては、
　たぶん、間違いか、異常　たぶん、あってはいけない
　　　（かなり、いいかげんな調査しかしてません）
　グループＩＤ＝０は、特別でたぶん、ALLの意
　ソースにハードコーディングされている値とみうけられる｡

$tablename = $xptblcheck_db->xptbl_prefix("groups");

$checkname_arr[14] = "trash";
$query_arr[14] = "SELECT * FROM ".$tablename;
$criteria_arr[14] = "groupid = 0" ;
$strhanteimsg_arr[14] = _AM_XPTC_ERRORMSG ;
$strcomment_arr[14] = $strdefcomment[3]."<br>".$strdefshorimsg[1]."\n" ;

---------------------------
シンプルな例２：
　サイト管理者グループ=1 に、システム管理モジュール=1 の
　システム管理権 = "system_admin"がないのはエラー？
  自動的にセットされるはずの項目｡

　これは、後になってわかったが、
　xoops2.0.3インストール時のデータ項目から抜けている｡
　でもインスートル後に「グループ管理」画面で、「サイト管理者」の更新すると自動で作成されます｡
　つまり、かならず「グループ管理」画面で、「サイト管理者」の更新する必要があります｡

$tablename = $xptblcheck_db->xptbl_prefix("group_permission");

$checkname_arr[22] = "missing";
$query_arr[22] = "SELECT * FROM ".$tablename;
$criteria_arr[22] = "gperm_name = 'system_admin'" ;
$criteria_arr[22] .= " AND gperm_groupid = 1" ;
$criteria_arr[22] .= " AND gperm_itemid = 1" ;
$strhanteimsg_arr[22] = _AM_XPTC_ERRORMSG ;
$strcomment_arr[22] = $strdefcomment[6]."<br>".$strdefshorimsg[2]."\n" ;

---------------------------
join check の例
//説明
//　groups_users_link LEFT JOIN　groups　リンクさせて、
//　LEFT JOIN　groups　リンクするのテーブルのキー値が
//　　" IS NULL"のレコードなら
//　groups_users_link　のレコードデータは無効なデータのはず｡
//  グループを削除追加しのか？要確認全テーブルのリンクでしょう｡
//　処理は、データを発見したときに出すので　"trash"

$tablename = $xptblcheck_db->xptbl_prefix("groups_users_link");
$tablename2 = $xptblcheck_db->xptbl_prefix("groups");

$query = "SELECT gu.* FROM ".$tablename." gu LEFT JOIN ".$tablename2." g ON gu.groupid=g.groupid ";
$criteria = " g.groupid IS NULL" ;

$checkname_arr[26] = "trash";
$query_arr[26] = $query;
$criteria_arr[26] = $criteria ;
$strhanteimsg_arr[26] = _AM_XPTC_KEIKOKUMSG ;
$strcomment_arr[26] = $strdefcomment[8]."<br>".$strdefshorimsg[5]."\n" ;

---------------------------
前処理あり　全グループ対象に の例
//説明
//　前処理により　groups　から　全　groupid　値配列に取得　
//　gperm_groupid　= groupid　値配列値ごとに、判定ルーチンを繰り返す
// 　
// 判定ルーチン
//　　　システム管理モジュール　１　の　アクセス権　module_read　は
//　　　xoopsが自動で追加するレコードで、 全グループにとって必須
//　　　無いと、ログオンさえできないか、権利がなくて真っ白になるはず｡
//　　　処理は、データを未発見時にメッセージするので"missing"
$tablename = $xptblcheck_db->xptbl_prefix("group_permission");
$tablename2 = $xptblcheck_db->xptbl_prefix("groups");

$query = "SELECT * FROM ".$tablename2;
$pre_query_arr[86] = $query;
$pre_keyname_arr[86] = "groupid" ;

//全グループに対して判定の繰り返し｡
//$pre_keyname_arr[86] = "groupid" ;の値と
//$keyname_arr[86] = "gperm_groupid" ;の項目名が
//が繰り返しの一致条件というわけです｡
//

$keyname_arr[86] = "gperm_groupid" ;

$checkname_arr[86] = "missing";
$query_arr[86] = "SELECT * FROM ".$tablename;
$criteria_arr[86] = "gperm_name = 'module_read'" ;
$criteria_arr[86] .= " AND gperm_itemid = 1" ;
$strhanteimsg_arr[86] = _AM_XPTC_ERRORMSG ;
$strcomment_arr[86] = $strdefcomment[7]."<br>".$strdefshorimsg[2]."\n" ;

//------------------------//
前判定あり、前処理あり　全グループ対象に のちょっと特別な例
//説明
//　前判定で、トップページに特定モジュールを指定しているときだけおこなう｡
//　　（これをしないと、configにリンクするモジュール値が
//　　　セットされていないので、判定がうまくいかないからです）
// リンクさせて、確認してますが？既定の値が何なのかを調べてなかったな｡
//$criteria = "(c.conf_title='_MD_AM_STARTPAGE')";
//$criteria .= " AND (m.mid IS NOT NULL)";
//
//　前処理により　groups　より全　groupid　値配列に取得　
//　　　groupid　=　値配列値ごとに、判定ルーチン　を繰り返す　
// 判定ルーチン
//　　トッページに指定したモジュールのアクセス権　module_read　がないと、
//　　無いと、そのグループはトップページが表示できないので
//　　ログオンさえできないはず｡
//　処理は、データを未発見時にメッセージするので"missing"
//--Guest top page -found only when all off 
	$tablename1 = $xptblcheck_db->xptbl_prefix("config");
	$tablename2 = $xptblcheck_db->xptbl_prefix("modules");
	$tablename3= $xptblcheck_db->xptbl_prefix("group_permission");
	$tablename4 = $xptblcheck_db->xptbl_prefix("groups");

$query = "SELECT c.* FROM ".$tablename1." c LEFT JOIN ".$tablename2." m ON c.conf_value=m.dirname ";
$criteria = "(c.conf_title='_MD_AM_STARTPAGE')";
$criteria .= " AND (m.mid IS NOT NULL)";

$pre_judgquery_arr[81] = $query;
$pre_judgcriteria_arr[81] = $criteria;
$pre_judgquerycount_arr[81] = 1 ;
//要するに、config　modulesのリンク有る無しを調べてますが、
//不正な値のチェックしてないです｡

//全グループに対してチェックをするため配列キーに取得
$query = "SELECT * FROM ".$tablename4;
$pre_query_arr[81] = $query;
$pre_keyname_arr[81] = "groupid" ;

//全グループに対して判定の繰り返し｡
//$pre_keyname_arr[81] = "groupid" ;の値と
//$keyname_arr[81] = "groupid" ;の項目名が
//が繰り返しの一致条件というわけです｡
//
$query = "SELECT m.* FROM ".$tablename2." m LEFT JOIN ".$tablename1." c ON m.dirname=c.conf_value ";
$query .= " LEFT JOIN ".$tablename3." l ON m.mid=l.gperm_itemid ";
$query .= " LEFT JOIN ".$tablename4." g ON l.gperm_groupid=g.groupid ";
$criteria = "(c.conf_title='_MD_AM_STARTPAGE')";
$criteria .= " AND (l.gperm_name = 'module_read')" ;

$checkname_arr[81] = "missing";
$query_arr[81] = $query;
$criteria_arr[81] = $criteria ;
$keyname_arr[81] = "groupid" ;
---------------------------
